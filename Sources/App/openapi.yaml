openapi: '3.1.0'
info:
  title: Blindlog API server
  version: 1.0.0
servers:
  - url: https://api.blindlog.me
    description: Blindlog API server
paths:
  /.well-known/apple-app-site-association:
    get:
      operationId: getAppleAppSiteAssociation
      responses:
        '200':
          description: A success response with a user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppleAppSiteAssociation'
  /challenge:
    post:
      operationId: generateChallenge
      responses:
        '200':
          description: A success response with a user.
          content:
            application/json:
              schema:
                type: string
                format: byte
  /passkey:
    post:
      operationId: addPasskey
      parameters:
        - name: challenge
          in: query
          description: Base64URL-encoded challenge returned by `/challenge`.
          required: true
          schema:
            type: string
            format: byte
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPasskey'
      responses:
        '200':
          description: A success response with a user.
  /user:
    post:
      operationId: createUser
      responses:
        '200':
          description: A success response with a user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserToken'
  /token:
    post:
      operationId: createToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                challenge:
                  type: string
                  description: User refresh token.
                
              required:
                - challenge
      responses:
        '200':
          description: A success response with a user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserToken'
  /refreshToken:
    post:
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  description: User refresh token.
              required:
                - refreshToken
      responses:
        '200':
          description: A success response with a user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserToken'
  /me:
    get:
      operationId: getMe
      responses:
        '200':
          description: A success response with a user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users:
    get:
      operationId: getUsers
      parameters:
        - name: ids
          in: query
          description: ID of user to return
          required: true
          explode: false
          schema:
            type: array
            items:
              type: string
              format: uuid
      responses:
        '200':
          description: A success response with a user.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
components:
  schemas:
    UserToken:
      type: object
      description: A value with the User contents.
      properties:
        id:
          type: string
          format: uuid
          description: User id.
        token:
          type: string
          description: User token.
        refreshToken:
          type: string
          description: User refresh token.
      required:
        - id
        - token
        - refreshToken
    User:
      type: object
      description: A value with the User contents.
      properties:
        id:
          type: string
          format: uuid
          description: User id.
      required:
        - id
    AppleAppSiteAssociation:
      type: object
      description: Apple App Site Association document.
      properties:
        webcredentials:
          $ref: '#/components/schemas/WebCredentials'
          description: Web credentials configuration.
        appclips:
          $ref: '#/components/schemas/AppClips'
          description: App Clips configuration.
        applinks:
          $ref: '#/components/schemas/AppLinks'
          description: Universal Links configuration.
    WebCredentials:
      type: object
      description: Web credentials configuration.
      properties:
        apps:
          type: array
          items:
            type: string
          description: App IDs (e.g., TEAMID.com.example.app).
    AppClips:
      type: object
      description: App Clips configuration.
      properties:
        apps:
          type: array
          items:
            type: string
          description: App Clip bundle IDs.
    AppLinks:
      type: object
      description: Universal Links configuration.
      properties:
        details:
          type: array
          items:
            $ref: '#/components/schemas/AppLinkDetail'
    AppLinkDetail:
      type: object
      description: Universal Link detail entry.
      properties:
        appIDs:
          type: array
          description: App IDs.
          items:
            type: string
        components:
          type: array
          description: Path components.
          items:
            type: string
    AddPasskey:
      type: object
      description: Passkey registration payload.
      properties:
        id:
          type: string
          description: User id.
        rawID:
          type: string
          description: Raw ID.
        type:
          type: string
          description: Credential type.
        attestationResponse:
          $ref: '#/components/schemas/AuthenticatorAttestation'
      required:
        - id
        - rawID
        - type
        - attestationResponse
    AuthenticatorAttestation:
      type: object
      description: Authenticator attestation response.
      properties:
        clientDataJSON:
          type: string
          format: byte
          description: Client Data JSON.
        attestationObject:
          type: string
          format: byte
          description: Attestation Object.
      required:
        - clientDataJSON
        - attestationObject
